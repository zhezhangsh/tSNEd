table(k)
k <- kmeans(x, 50)[[1]]
table(k)
sort(table(k))
k <- kmeans(x, 100)[[1]]
sort(table(k))
plot(x)
points(x[k==53, ])
points(x[k==53, ], col=2)
plot(x, pch=19, cex=.2)
plot(x[k==53, ], pch=19, cex=.2)
k <- kmeans(x, 80)[[1]]
plot(x, pch=19, cex=.2)
sort(table(k))
points(x[k==36, ], col=2)
ls()
s3
points(x[s3, ], pch=19, col=3)
s3 <- names(k[k==36])
s4 <- rownames(x)[x[,1]< -60]
s <- list(s1, s2, s3, s4)
plot(x, pch=19, col='grey', cex=.5)
for (i in 1:4) points(s[[i]], col=i1)
plot(x, pch=19, col='grey', cex=.5)
for (i in 1:4) points(x[s[[i]], ], col=i1)
plot(x, pch=19, col='grey', cex=.5)
for (i in 1:4) points(x[s[[i]], ], col=i)
i <- sapply(s, function(s) samples(s, 1))
i <- sapply(s, function(s) sample(s, 1))
i
plot(x, pch=19, col='grey', cex=.5); points(x[i, ], col=1:4)
i <- sapply(s, function(s) sample(s, 1))
plot(x, pch=19, col='grey', cex=.5); points(x[i, ], col=1:4, pch=19, cex=.7)
i <- sapply(s, function(s) sample(s, 1))
plot(x, pch=19, col='grey', cex=.5); points(x[i, ], col=1:4, pch=19, cex=.7)
i <- sapply(s, function(s) sample(s, 1))
plot(x, pch=19, col='grey', cex=.5); points(x[i, ], col=1:4, pch=19, cex=.7)
i <- sapply(s, function(s) sample(s, 1))
plot(x, pch=19, col='grey', cex=.5); points(x[i, ], col=1:4, pch=19, cex=.7)
i <- sapply(s, function(s) sample(s, 1))
plot(x, pch=19, col='grey', cex=.5); points(x[i, ], col=1:4, pch=19, cex=.7)
i <- sapply(s, function(s) sample(s, 1))
plot(x, pch=19, col='grey', cex=.5); points(x[i, ], col=1:4, pch=19, cex=.7)
i <- sapply(s, function(s) sample(s, 1))
plot(x, pch=19, col='grey', cex=.5); points(x[i, ], col=1:4, pch=19, cex=.7)
i <- sapply(s, function(s) sample(s, 1))
plot(x, pch=19, col='grey', cex=.5); points(x[i, ], col=1:4, pch=19, cex=.7)
i <- sapply(s, function(s) sample(s, 1))
plot(x, pch=19, col='grey', cex=.5); points(x[i, ], col=1:4, pch=19, cex=.7)
i <- sapply(s, function(s) sample(s, 1))
plot(x, pch=19, col='grey', cex=.5); points(x[i, ], col=1:4, pch=19, cex=.7)
i <- sapply(s, function(s) sample(s, 1))
plot(x, pch=19, col='grey', cex=.5); points(x[i, ], col=1:4, pch=19, cex=.7)
i <- sapply(s, function(s) sample(s, 1))
plot(x, pch=19, col='grey', cex=.5); points(x[i, ], col=1:4, pch=19, cex=.7)
i <- sapply(s, function(s) sample(s, 1))
plot(x, pch=19, col='grey', cex=.5); points(x[i, ], col=1:4, pch=19, cex=.7)
i <- sapply(s, function(s) sample(s, 1))
plot(x, pch=19, col='grey', cex=.5); points(x[i, ], col=1:4, pch=19, cex=.7)
i <- sapply(s, function(s) sample(s, 1))
plot(x, pch=19, col='grey', cex=.5); points(x[i, ], col=1:4, pch=19, cex=.7)
i <- sapply(s, function(s) sample(s, 1))
plot(x, pch=19, col='grey', cex=.5); points(x[i, ], col=1:4, pch=19, cex=.7)
i <- sapply(s, function(s) sample(s, 1))
plot(x, pch=19, col='grey', cex=.5); points(x[i, ], col=1:4, pch=19, cex=.7)
i <- sapply(s, function(s) sample(s, 1))
plot(x, pch=19, col='grey', cex=.5); points(x[i, ], col=1:4, pch=19, cex=.7)
i <- sapply(s, function(s) sample(s, 1))
plot(x, pch=19, col='grey', cex=.5); points(x[i, ], col=1:4, pch=19, cex=.7)
i <- sapply(s, function(s) sample(s, 1))
plot(x, pch=19, col='grey', cex=.5); points(x[i, ], col=1:4, pch=19, cex=.7)
i <- sapply(s, function(s) sample(s, 1))
plot(x, pch=19, col='grey', cex=.5); points(x[i, ], col=1:4, pch=19, cex=.7)
i <- sapply(s, function(s) sample(s, 1))
plot(x, pch=19, col='grey', cex=.5); points(x[i, ], col=1:4, pch=19, cex=.7)
i <- sapply(s, function(s) sample(s, 1))
plot(x, pch=19, col='grey', cex=.5); points(x[i, ], col=1:4, pch=19, cex=.7)
i <- sapply(s, function(s) sample(s, 1))
plot(x, pch=19, col='grey', cex=.5); points(x[i, ], col=1:4, pch=19, cex=.7)
i
names(i) <- c('large', 'small', 'distal', 'orphan')
saveRDS(i, 'selected.rds')
dir()
medians <- mds
save(medians, 'medians.RData')
save(medians, file='medians.RData')
i
selected <- i
save(i, file='selected.RData')
ts <- z[1:10]
x <- ts[[1]]
dim(x)
?dist
i
which(rownames(ts[[1]])==i[1])
ind <- 2535
ind
a <- ts[[1]]
dim(a)
x <- a[ind, 1];
y <- a[ind, 2];
x <- a[ind, 1];
y <- a[ind, 2];
d <- sqrt((x-a[,1])^2 + (y-a[,2])^2);
length(d)
summary(d)
d <- sapply(ts, function(a) {
x <- a[ind, 1];
y <- a[ind, 2];
sqrt((x-a[,1])^2 + (y-a[,2])^2);
});
dim(d)
head(d)
adj <- mds[1:length(ts)]
adj
adj <- 100/adj
adj
summary(d)
if (!is.na(adj) & length(adj)==length(ts)) {
for (i in 1:ncol(d)) d[, i] <- adj[i] * d[, i];
};
d <- sapply(ts, function(a) {
x <- a[ind, 1];
y <- a[ind, 2];
sqrt((x-a[,1])^2 + (y-a[,2])^2);
});
if (!identical(NA, adj) & length(adj)==length(ts)) {
for (i in 1:ncol(d)) d[, i] <- adj[i] * d[, i];
};
dim(d)
summary(d)
i
head(d)
rownames(d) <- rownames(ts[[1]]);
d <- d[order(rowMeans(d)), ];
head(d)
# Get distance of a single samples to all the other samples
One2Others <- function(ts, ind, adj=NA) {
# ts    A list of tSNE matrix
# ind   Row index of a sample in the tSNE matrix whose to all other samples will be calculated
# adj   Rescaling factor, a vector of positive number with the same length of <ts> if not NA
d <- sapply(ts, function(a) {
x <- a[ind, 1];
y <- a[ind, 2];
sqrt((x-a[,1])^2 + (y-a[,2])^2);
});
if (!identical(NA, adj) & length(adj)==length(ts)) {
for (i in 1:ncol(d)) d[, i] <- adj[i] * d[, i];
};
rownames(d) <- rownames(ts[[1]]);
d;
};
adj <- 100/mds
summary(adj)
ind <- which(rownames(ts[[1]]) %in% i)
ind
i
dir()
i <- readRDS('selected.rds')
i
ind <- which(rownames(ts[[1]]) %in% i)
ind
length(z)
ds <- lapply(ind, function(i) One2Others(z, i, adj))
sapply(ds, dim)
quartz(); par(mar=c(4, 4, 2, 2))
quartz(w=6,h=6); par(mar=c(4, 4, 2, 2))
quartz(w=4,h=4); par(mar=c(4, 4, 2, 2))
plot(ts[[1]])
plot(ts[[1]]); points(ts[[1]][ind, ], col=rainbow(4), pch=19)
plot(ts[[1]], pch=19, col='#88888888'); points(ts[[1]][ind, ], col=rainbow(4), pch=19)
plot(ts[[1]], pch=19, col='#88888888'); points(ts[[1]][ind, ], col=rainbow(4), pch=18)
plot(ts[[1]], pch=19, col='#88888888'); points(ts[[1]][ind, ], col=rainbow(4), pch="*")
plot(ts[[1]], pch=19, col='#88888833'); points(ts[[1]][ind, ], col=rainbow(4), pch="*")
plot(ts[[1]], pch=19, col='#88888833', cex=0.5); points(ts[[1]][ind, ], col=rainbow(4), pch="*")
plot(ts[[1]], pch=19, col='#88888833', cex=0.5); points(ts[[1]][ind, ], col=rainbow(4), pch="*", cex=2)
plot(ts[[1]], pch=19, col='#88888833', cex=0.5); points(ts[[1]][ind, ], col=rainbow(4), pch="*", cex=16)
plot(ts[[1]], pch=19, col='#88888833', cex=0.5); points(ts[[1]][ind, ], col=rainbow(4), pch="*", cex=18)
plot(ts[[1]], pch=19, col='#88888833', cex=0.5); points(ts[[1]][ind, ], col=rainbow(4), pch="*", cex=16)
plot(ts[[1]], pch=19, col='#88888833', cex=0.5); points(ts[[1]][ind, ], col=rainbow(4), pch=16, cex=2)
plot(ts[[1]], pch=19, col='#88888833', cex=0.5); points(ts[[1]][ind, ], col=rainbow(4), pch=17, cex=2)
plot(ts[[1]], pch=19, col='#88888833', cex=0.5); points(ts[[1]][ind, ], col=rainbow(4), pch=18, cex=2)
plot(ts[[1]], pch=19, col='#88888833', cex=0.5); points(ts[[1]][ind, ], col=rainbow(4), pch=18, cex=1.5)
plot(ts[[1]], pch=19, col='#88888833', cex=0.5); points(ts[[1]][ind, ], col=rainbow(4), pch=18, cex=1)
mns <- sapply(ts, rowMeans)
mns <- sapply(ds, rowMeans)
sds <- sapply(ds, sd)
dim(mns)
plot(mns[, 1])
plot(sort(mns[, 1]))
hist(sds[, 1])
dim(sds)
sds <- sapply(ds, apply(ds, 1, sd))
sds <- sapply(ds, function(ds) apply(ds, 1, sd))
dim(sds)
hist(sds[, 1])
ds <- lapply(ds, function(d) d[order(rowMeans(d)), ])
dim(ds[[1]])
mns <- sapply(ds, rowMeans)
plot(mns[, 1], type='l')
sds <- sapply(ds, function(ds) apply(ds, 1, sd))
min(mns-sds)
ses <- sds/sqrt(1000)
min(mns-ses)
quartz(w=8, h=6); par(mfrow=c(2,2), par=c(4,4,2,2))
quartz(w=8, h=6); par(mfrow=c(2,2), mar=c(4,4,2,2))
for (i in 1:4) {plot(mns[, i], lwd=2, xlab='Sample ranking', ylab='Distance', main='')}
for (i in 1:4) {plot(mns[, i], type='l', lwd=2, xlab='Sample ranking', ylab='Distance', main='')}
for (i in 1:4) {plot(mns[, i], type='l', lwd=2, col='#FF8888', xlab='Sample ranking', ylab='Distance', main='')}
for (i in 1:4) {plot(mns[, i], type='l', lwd=2, col='#FF8888', xlab='Sample ranking', ylab='Distance', main='', ylim=c(0, 225))}
for (i in 1:4) {plot(mns[, i], type='l', lwd=2, col='#FF8888', xlab='Sample ranking', ylab='Distance', main='', ylim=c(0, 225), xaxs='i', yaxs='i')}
for (i in 1:4) {plot(mns[, i], type='l', lwd=2, col='#FF8888', xlab='Sample ranking', ylab='Distance', main='', ylim=c(0, 225), xaxs='i', yaxs='i'); lines(mns[, i]+ses[, i])}
summary(ses[, 1])
for (i in 1:4) {plot(mns[, i], type='l', lwd=2, col='#FF8888', xlab='Sample ranking', ylab='Distance', main='', ylim=c(0, 225), xaxs='i', yaxs='i'); lines(mns[, i]+sds[, i])}
for (i in 1:4) {plot(mns[, i], type='l', lwd=2, col='#FF8888', xlab='Sample ranking', ylab='Distance', main='', ylim=c(0, 225), xaxs='i', yaxs='i'); lines(mns[, i]+sds[, i], col='#88888888')}
for (i in 1:4) {plot(mns[, i], type='l', lwd=2, col='#FF8888', xlab='Sample ranking', ylab='Distance', main='', ylim=c(0, 250), xaxs='i', yaxs='i'); lines(mns[, i]+sds[, i], col='#88888888')}
for (i in 1:4) {plot(mns[, i], type='l', lwd=2, col='#FF8888', xlab='Sample ranking', ylab='Distance', main='', ylim=c(0, max(mns[,i]+sds[,i])), xaxs='i', yaxs='i'); lines(mns[, i]+sds[, i], col='#88888888')}
?rect
for (i in 1:4) {plot(mns[, i], type='l', lwd=2, col='#FF8888', xlab='Sample ranking', ylab='Distance', main='', ylim=c(0, max(mns[,i]+sds[,i])), xaxs='i', yaxs='i'); polygon(c(1:nrow(mns), nrow(mns):1), c(mns[, i]-sds[,i], rev(mns[, i]+sds[, i])), col='#88888888')}
for (i in 1:4) {plot(mns[, i], type='l', lwd=2, col='#FF8888', xlab='Sample ranking', ylab='Distance', main='', ylim=c(0, max(mns[,i]+sds[,i])), xaxs='i', yaxs='i'); polygon(c(1:nrow(mns), nrow(mns):1), c(mns[, i]-sds[,i], rev(mns[, i]+sds[, i])), col='#88888888')}
?polygon
for (i in 1:4) {plot(mns[, i], type='l', lwd=2, col='#FF8888', xlab='Sample ranking', ylab='Distance', main='', ylim=c(0, max(mns[,i]+sds[,i])), xaxs='i', yaxs='i'); polygon(c(1:nrow(mns), nrow(mns):1), c(mns[, i]-sds[,i], rev(mns[, i]+sds[, i])), col='#88888888', border='#88888888')}
for (i in 1:4) {plot(mns[, i], type='l', lwd=2, col='#FF8888', xlab='Sample ranking', ylab='Distance', main='', ylim=c(0, max(mns[,i]+sds[,i])), xaxs='i', yaxs='i'); polygon(c(1:nrow(mns), nrow(mns):1), c(mns[, i]-sds[,i], rev(mns[, i]+sds[, i])), col='#88888888', border='#88888822')}
par(mar=c(5,5,2,2))
i
s <- readRDS("selected.rds")
s
main <- c('Large cluster', 'Small cluster', 'Distal', 'Orphan')
for (i in 1:4) {plot(mns[, i], type='l', lwd=2, col='#FF8888', xlab='Sample ranking', ylab='Distance', main=main[i], ylim=c(0, max(mns[,i]+sds[,i])), xaxs='i', yaxs='i'); polygon(c(1:nrow(mns), nrow(mns):1), c(mns[, i]-sds[,i], rev(mns[, i]+sds[, i])), col='#88888888', border='#88888822')}
for (i in 1:4) {plot(mns[, i], type='l', lwd=2, col='#FF8888', xlab='Sample ranking', ylab='Distance', main=main[i], ylim=c(0, max(mns[1:100,i]+sds[1:100,i]), xlim=c(1, 100)), xaxs='i', yaxs='i'); polygon(c(1:nrow(mns), nrow(mns):1), c(mns[, i]-sds[,i], rev(mns[, i]+sds[, i])), col='#88888888', border='#88888822')}
for (i in 1:4) {plot(mns[, i], type='l', lwd=2, col='#FF8888', xlab='Sample ranking', ylab='Distance', main=main[i], ylim=c(0, max(mns[1:100,i]+sds[1:100,i]), xlim=c(1, 100), xaxs='i', yaxs='i'); polygon(c(1:nrow(mns), nrow(mns):1), c(mns[, i]-sds[,i], rev(mns[, i]+sds[, i])), col='#88888888', border='#88888822')}
for (i in 1:4) {plot(mns[, i], type='l', lwd=2, col='#FF8888', xlab='Sample ranking', ylab='Distance', main=main[i], ylim=c(0, max(mns[1:100,i]+sds[1:100,i])), xlim=c(1, 100), xaxs='i', yaxs='i'); polygon(c(1:nrow(mns), nrow(mns):1), c(mns[, i]-sds[,i], rev(mns[, i]+sds[, i])), col='#88888888', border='#88888822')}
quartz(w=8, h=6); par(mfrow=c(2,2), mar=c(5,5,2,2))
for (i in 1:4) {plot(mns[, i], type='l', lwd=2, col='#FF8888', xlab='Sample ranking', ylab='Distance', main=main[i], ylim=c(0, max(mns[1:100,i]+sds[1:100,i])), xlim=c(1, 100), xaxs='i', yaxs='i'); polygon(c(1:nrow(mns), nrow(mns):1), c(mns[, i]-sds[,i], rev(mns[, i]+sds[, i])), col='#88888888', border='#88888822')}
head(sds)
for (i in 1:4) {plot(mns[, i], type='l', lwd=2, col='#FF8888', xlab='Sample ranking', ylab='Distance', main=main[i], ylim=c(0, max(mns[1:10,i]+sds[1:10,i])), xlim=c(1, 10), xaxs='i', yaxs='i'); polygon(c(1:nrow(mns), nrow(mns):1), c(mns[, i]-sds[,i], rev(mns[, i]+sds[, i])), col='#88888888', border='#88888822')}
for (i in 1:4) {plot(mns[, i], type='l', lwd=2, col='#FF8888', xlab='Sample ranking', ylab='Distance', main=main[i], ylim=c(0, max(mns[1:5,i]+sds[1:5,i])), xlim=c(1, 5), xaxs='i', yaxs='i'); polygon(c(1:nrow(mns), nrow(mns):1), c(mns[, i]-sds[,i], rev(mns[, i]+sds[, i])), col='#88888888', border='#88888822')}
head(mns)
for (i in 1:4) {plot(mns[, i], type='l', lwd=2, col='#FF8888', xlab='Sample ranking', ylab='Distance', main=main[i], ylim=c(0, max(mns[1:100,i]+sds[1:100,i])), xlim=c(1, 100), xaxs='i', yaxs='i'); polygon(c(1:nrow(mns), nrow(mns):1), c(mns[, i]-sds[,i], rev(mns[, i]+sds[, i])), col='#88888888', border='#88888822')}
??pdf2png
?png
library("pdftools", lib.loc="~/Library/R/3.3/library")
setwd('..')
setwd('figure/')
dir()
dir()->f
pdf_convert(f[i], dpi=150)
d1 <- dist(z[[1]])
d2 <- dist(z[[2]])
d1 + d2->d
plot(hclust(d))
d0 <- dist(ts[[1]]);
if (!identical(NA, adj) & length(adj)==length(ts)) d0 <- adj[1]*d0;
for (i in 2:length(ts)) {
d1 <- dist(ts[[i]]);
if (!identical(NA, adj) & length(adj)==length(ts)) d1 <- adj[i]*d1;
d0 <- d0+d1;
};
d0 <- d0/length(ts);
length(ts)
mean(d1)
length(adj)
adj <- adj[1:10]
mean(mns)
length(ts)
length(adj)
d0 <- dist(ts[[1]]);
if (!identical(NA, adj) & length(adj)==length(ts)) d0 <- adj[1]*d0;
for (i in 2:length(ts)) {
d1 <- dist(ts[[i]]);
if (!identical(NA, adj) & length(adj)==length(ts)) d1 <- adj[i]*d1;
d0 <- d0+d1;
};
d0 <- d0/length(ts);
mean(d0)
# Calculate the average of a set of distance matrix generated by t-SNE runs on the same data set
DistConsensus <- function(ts, adj=NA) {
# ts    A list of tSNE matrix
# adj   Rescaling factor, a vector of positive number with the same length of <ts> if not NA
d0 <- dist(ts[[1]]);
if (!identical(NA, adj) & length(adj)==length(ts)) d0 <- adj[1]*d0;
for (i in 2:length(ts)) {
d1 <- dist(ts[[i]]);
if (!identical(NA, adj) & length(adj)==length(ts)) d1 <- adj[i]*d1;
d0 <- d0+d1;
};
d0 <- d0/length(ts);
};
length(ts)
length(adj)
adj <- 100/mds
summary(adj)
length(z)
n <- c(5, 10, 25, 50, 100, 250, 500)
ds <- lapply(n, function(n) {print(n); ind <- sample(1:1000, n); DistConsensus(z[ind], adj[ind])})
d1 <- ds[[1]]
hc <- lapply(ds, hclust)
h1 <- hc[[1]]
heatmap(d1)
as.matrix(d1)->x
heatmap(x)
png('heatmap')
heatmap(x[1:10, 1:10])
dev.off()
dir()
png('heatmap.png')
heatmap(-x)
dimnames(d1)
plot(hc[[1]])
str(hc[[1]])
h1 <- hc[[1]]
h1$labels <- rep('', length(h1$labels))
plot(h1)
dev.off()
plot(h1)
names(ds) <- paste(n, 'runs')
names(ds)
dir()
saveRDS(ds, '../data/average_dist_rand_runs.rds')
fn <- paste('tree_avg_dist_', n, '_runs.pdf', sep='')
fn
ds$'1 run' <- dist(z[[sample(1000, 1)]])
names(ds)
ds <- ds[c(8, 1:7)]
names(ds)
saveRDS(ds, '../data/average_dist_rand_runs.rds')
quartz(w=8, h=3.2); par(mfrow=c(2, 4), mar=c(2, 4, 2, 1));
quartz(w=8, h=4.8); par(mfrow=c(2, 4), mar=c(2, 4, 2, 1));
for (i in 1:length(ds)) {print(i); hc <- hclust()}
?hclust
plot(h1, ann=FALSE)
quartz(w=8, h=4.8); par(mfrow=c(2, 4), mar=c(2, 4, 2, 1));
for (i in 1:length(ds)) {print(i); h <- hclust(ds[[i]]); plot(h, ann=FALSE, xlab='', sub='', ylab='Distance', main=names(ds)[i])}
names(ds)
for (i in 1:length(ds)) {print(i); h <- hclust(ds[[i]]); h$labels <- rep('', length(h$labels)); plot(h, ann=FALSE, xlab='', sub='', ylab='Distance', main=names(ds)[i])}
for (i in 1:length(ds)) {print(i); h <- hclust(ds[[i]]); h$labels <- rep('', length(h$labels)); plot(h, ann=FALSE, xlab='', sub='', ylab='Distance', main=names(ds)[i]); title(ylab='Distance')}
for (i in 1:length(ds)) {print(i); h <- hclust(ds[[i]]); h$labels <- rep('', length(h$labels)); plot(h, ann=FALSE, xlab='', sub='', ylab='Distance', main=names(ds)[i]); title(ylab='Distance', title=names(ds)[i])}
for (i in 1:length(ds)) {print(i); h <- hclust(ds[[i]]); h$labels <- rep('', length(h$labels)); plot(h, ann=FALSE, xlab='', sub='', ylab='Distance', main=names(ds)[i]); title(ylab='Distance', main ==names(ds)[i])}
names(ds)
for (i in 1:length(ds)) {print(i); h <- hclust(ds[[i]]); h$labels <- rep('', length(h$labels)); plot(h, ann=FALSE, xlab='', sub='', ylab='Distance', main=names(ds)[i]); title(ylab='Distance', main=names(ds)[i])}
library("caret", lib.loc="~/Library/R/3.3/library")
ds$'1000 runs' <- DistConsensus(z, adj)
saveRDS(ds, '../data/average_dist_rand_runs.rds')
quartz(w=6, h=7.2); par(mfrow=c(3, 3), mar=c(2, 4, 2, 1));
quartz(w=7.2, h=6); par(mfrow=c(3, 3), mar=c(2, 4, 2, 1));
for (i in 1:length(ds)) {print(i); h <- hclust(ds[[i]]); h$labels <- rep('', length(h$labels)); plot(h, ann=FALSE, xlab='', sub='', ylab='Distance', main=names(ds)[i]); title(ylab='Distance', main=names(ds)[i])}
quartz(w=7.2, h=4.8); par(mfrow=c(3, 3), mar=c(0, 4, 2, 1));
for (i in 1:length(ds)) {print(i); h <- hclust(ds[[i]]); h$labels <- rep('', length(h$labels)); plot(h, ann=FALSE, xlab='', sub='', ylab='Distance', main=names(ds)[i]); title(ylab='Distance', main=names(ds)[i])}
d1 <- ds[[1]]
kmeans(d1, 9)
ks <- sapply(ds, function(d) kmeans(d, 9)[[1]])
dim(ks)
x <- cutree(hclust(ds[[9]]), 9)
table(x)
xtabs(~x+ks[, 9])
ct <- sapply(ds, function(d) cutree(hclust(d), 9))
dim(ct)
xtabs(~ct[, 1]+ks[, 1])
xtabs(~ct[, 9]+ks[, 9])
xtabs(~ct[, 9]+ct[, 8])
source(gzcon(url('https://github.com/systematicinvestor/SIT/raw/master/sit.gz', 'rb')))
xt <- lapply(1:8, function(i) as.matrix(xtabs(~ct[, i]+ct[, i+1])))
xt[[1]]
xt[[8]]
x <- xt[[1]]
str(x)
class(x)
x <- as.matrix(x)
x
class(x)
matrix(x)
as.data.frame(x)
dim(x)
x
str(x)
length(x)
str(x)
class(x)
?xtabs
print(x)
x <- apply(x, 1, as.vector)
x
xt <- lapply(x, function(x) apply(x, 2, as.vector))
xt <- lapply(xt, function(x) apply(x, 2, as.vector))
xt[[1]]
x[[1]]
xt <- lapply(1:8, function(i) as.matrix(xtabs(~ct[, i]+ct[, i+1])))
x <- xt[[1]]
xt <- lapply(xt, function(x) apply(x, 1, as.vector))
xt[[1]]
x
xt <- lapply(xt, function(x) apply(x, 2, as.vector))
xt[[1]]
class(xt[[1]])
names(xt)
xt[[1]]
x[[1]]
heatmap.2(x = xt[[1]], Rowv = FALSE, Colv = FALSE, dendrogram = "none",
cellnote = xt[[1]], notecol = "black", notecex = 2,
trace = "none", key = FALSE, margins = c(7, 11))
library(gplots)
heatmap.2(x = xt[[1]], Rowv = FALSE, Colv = FALSE, dendrogram = "none",
cellnote = xt[[1]], notecol = "black", notecex = 2,
trace = "none", key = FALSE, margins = c(7, 11))
heatmap.2(x = -xt[[1]], Rowv = FALSE, Colv = FALSE, dendrogram = "none",
cellnote = xt[[1]], notecol = "black", notecex = 2,
trace = "none", key = FALSE, margins = c(7, 11))
heatmap.2(x = -xt[[1]], Rowv = FALSE, Colv = FALSE, dendrogram = "none",
cellnote = xt[[1]], notecol = "black", notecex = 1,
trace = "none", key = FALSE, margins = c(7, 11))
par(mfrow=c(1, 2))
heatmap.2(x = -xt[[1]], Rowv = FALSE, Colv = FALSE, dendrogram = "none",
cellnote = xt[[1]], notecol = "black", notecex = 1,
trace = "none", key = FALSE, margins = c(7, 11))
heatmap.2(x = -xt[[1]], Rowv = FALSE, Colv = FALSE, dendrogram = "none",
cellnote = xt[[1]], notecol = "black", notecex = 1,
trace = "none", key = FALSE, margins = c(7, 11))
?heatmap.2
heatmap.2(x = -xt[[1]], Rowv = FALSE, Colv = FALSE, dendrogram = "none",
cellnote = xt[[1]], notecol = "black", notecex = 1,
trace = "none", key = FALSE, margins = c(7, 11), scale='none')
heatmap.2(x = -xt[[8]], Rowv = FALSE, Colv = FALSE, dendrogram = "none",
cellnote = xt[[8]], notecol = "black", notecex = 1,
trace = "none", key = FALSE, margins = c(7, 11), scale='none')
heatmap.2(x = -xt[[8]], Rowv = FALSE, Colv = FALSE, dendrogram = "none",
cellnote = xt[[8]], notecol = "black", notecex = 1,
trace = "both", key = FALSE, margins = c(7, 11), scale='none')
heatmap.2(x = -xt[[8]], Rowv = FALSE, Colv = FALSE, dendrogram = "none",
cellnote = xt[[8]], notecol = "black", notecex = 1,
trace = "none", border='white', key = FALSE, margins = c(7, 11), scale='none')
heatmap.2(x = -xt[[8]], Rowv = FALSE, Colv = FALSE, dendrogram = "none",
cellnote = xt[[8]], notecol = "black", notecex = 1,
trace = "none", colsep='white', key = FALSE, margins = c(7, 11), scale='none')
heatmap.2(x = -xt[[8]], Rowv = FALSE, Colv = FALSE, dendrogram = "none",
cellnote = xt[[8]], notecol = "black", notecex = 1,
trace = "none", colsep='white', key = FALSE, margins = c(7, 11), scale='none')
heatmap.2(x = -xt[[8]], Rowv = FALSE, Colv = FALSE, dendrogram = "none",
cellnote = xt[[8]], notecol = "black", notecex = 1,
trace = "none", colsep=0.1, key = FALSE, margins = c(7, 11), scale='none')
heatmap.2(x = -xt[[8]], Rowv = FALSE, Colv = FALSE, dendrogram = "none",
cellnote = xt[[8]], notecol = "black", notecex = 1,
trace = "none", sepcolor="white", key = FALSE, margins = c(7, 11), scale='none')
heatmap.2(x = -xt[[8]], Rowv = FALSE, Colv = FALSE, dendrogram = "none",
cellnote = xt[[8]], notecol = "black", notecex = 1,
trace = "none", colsep=TRUE, key = FALSE, margins = c(7, 11), scale='none')
heatmap.2(x = -xt[[8]], Rowv = FALSE, Colv = FALSE, dendrogram = "none",
cellnote = xt[[8]], notecol = "black", notecex = 1,
trace = "none", vline=TRUE, key = FALSE, margins = c(7, 11), scale='none')
xt[[1]]
table(ct[, 1])
n
n <- c(1, n, 1000)
for (i in 1:8) colnames(n[i], 1:9, sep=)
for (i in 1:8) colnames(n[i], 1:9, sep='_')
for (i in 1:8) colnames(xt[[i]]) <- paste(n[i], 1:9, sep='_')
ct[[1]]
xt[[1]]
for (i in 1:8) rownames(xt[[i]]) <- paste(n[i+1], 1:9, sep='_')
xt[[1]]
saveRDS(xt, '../data/avg_dist_agreement_random_runs.rds')
?heatmap.2
image(xt[[1]])
?image
par(mfrow=c(1, 2))
image(xt[[1]])
image(-xt[[1]])
image(-xt[[1]], useRaster=TRUE)
image(-xt[[1]], useRaster=TRUE, axes=FALSE)
quartz(w=8, h=4); par(mfrow=c(2, 4), mar=c(3,3,2,2))
length(xt)
for (i in 1:length(xt)) {image(-xt[[i]], axes=FALSE)}
for (i in 1:length(xt)) {image(-xt[[i]], axes=FALSE, xaxs='i', yaxs='i')}
for (i in 1:length(xt)) {image(-xt[[i]], axes=FALSE, xaxs='i', yaxs='i', xlim=c(0, 9), ylim=c(0, 9))}
for (i in 1:length(xt)) {image(-xt[[i]], axes=FALSE, xaxs='i', yaxs='i', xlim=c(0, 1), ylim=c(0, 1))}
for (i in 1:length(xt)) {image(-xt[[i]], axes=FALSE, xaxs='i', yaxs='i'); }
par()
quartz(w=8, h=4); par(mfrow=c(2, 4), mar=c(1,1,1,1))
for (i in 1:length(xt)) {image(-xt[[i]], axes=FALSE, xaxs='i', yaxs='i'); }
quartz(w=8, h=4); par(mfrow=c(2, 4), mar=c(2, 2, 2, 2))
for (i in 1:length(xt)) {image(-xt[[i]], axes=FALSE, xaxs='i', yaxs='i'); }
quartz(w=8, h=4); par(mfrow=c(2, 4), mar=c(2, 2, 2, 2))
for (i in 1:length(xt)) {image(-xt[[i]], axes=FALSE, xaxs='i', yaxs='i'); }
quartz(w=8, h=4); par(mfrow=c(2, 4), mar=c(2, 2, 1, 1))
for (i in 1:length(xt)) {image(-xt[[i]], axes=FALSE, xaxs='i', yaxs='i'); }
names(xt)
-0.0625-1.0625
(-0.0625-1.0625)/9
for (i in 1:length(xt)) {image(-xt[[i]], axes=FALSE, xaxs='i', yaxs='i'); text(rep(seq(0, 1, 1/8), each=9), rep(seq(0, 1, 1/8), 9), text=xt[[i]]) }
for (i in 1:length(xt)) {image(-xt[[i]], axes=FALSE, xaxs='i', yaxs='i'); text(rep(seq(0, 1, 1/8), each=9), rep(seq(0, 1, 1/8), 9), label=xt[[i]]) }
for (i in 1:length(xt)) {image(-xt[[i]], axes=FALSE, xaxs='i', yaxs='i'); text(rep(seq(0, 1, 1/8), each=9), rep(seq(0, 1, 1/8), 9), label=xt[[i]], cex=.8) }
names(ds)
for (i in 1:length(xt)) {image(-xt[[i]], axes=FALSE, xaxs='i', yaxs='i'); text(rep(seq(0, 1, 1/8), each=9), rep(seq(0, 1, 1/8), 9), label=xt[[i]], cex=.8); title(xlab=names(ds)[i]) }
for (i in 1:length(xt)) {image(-xt[[i]], axes=FALSE, xaxs='i', yaxs='i'); text(rep(seq(0, 1, 1/8), each=9), rep(seq(0, 1, 1/8), 9), label=xt[[i]], cex=.8); title(xlab=names(ds)[i], line=-1) }
for (i in 1:length(xt)) {image(-xt[[i]], axes=FALSE, xaxs='i', yaxs='i'); text(rep(seq(0, 1, 1/8), each=9), rep(seq(0, 1, 1/8), 9), label=xt[[i]], cex=.8); title(xlab=names(ds)[i], line=0) }
for (i in 1:length(xt)) {image(-xt[[i]], axes=FALSE, xaxs='i', yaxs='i'); text(rep(seq(0, 1, 1/8), each=9), rep(seq(0, 1, 1/8), 9), label=xt[[i]], cex=.8); title(xlab=names(ds)[i], line=0.5) }
for (i in 1:length(xt)) {image(-xt[[i]], axes=FALSE, xaxs='i', yaxs='i'); text(rep(seq(0, 1, 1/8), each=9), rep(seq(0, 1, 1/8), 9), label=xt[[i]], cex=.8); title(xlab=names(ds)[i], line=0.5, ylab=names(ds)+1) }
for (i in 1:length(xt)) {image(-xt[[i]], axes=FALSE, xaxs='i', yaxs='i'); text(rep(seq(0, 1, 1/8), each=9), rep(seq(0, 1, 1/8), 9), label=xt[[i]], cex=.8); title(xlab=names(ds)[i], line=0.5, ylab=names(ds)[i+1]) }
for (i in 1:7) plot(0)
for (i in 1:length(xt)) {image(-xt[[i]], axes=FALSE, xaxs='i', yaxs='i'); text(rep(seq(0, 1, 1/8), each=9), rep(seq(0, 1, 1/8), 9), label=xt[[i]], cex=.8); title(xlab=names(ds)[i], line=0.5, ylab=names(ds)[i+1]) }
for (i in 1:length(xt)) {image(-xt[[i]], axes=FALSE, xaxs='i', yaxs='i'); text(rep(seq(0, 1, 1/8), 9), rep(seq(0, 1, 1/8), each=9), label=xt[[i]], cex=.8); title(xlab=names(ds)[i], line=0.5, ylab=names(ds)[i+1]) }
x <- readRDS("/Users/zhangz/Documents/tSNEd/data/avg_dist_agreement_random_runs.rds")
x
dir()
f <- dir()
f0 <- sub('pdf', 'png', f)
for (i in 1:length(f)) pdf_convert(f[i], dpi=120, filenames = f0[i])
for (i in 1:length(xt)) {image(-xt[[i]], axes=FALSE, xaxs='i', yaxs='i'); text(rep(seq(0, 1, 1/8), 9), rep(seq(0, 1, 1/8), each=9), label=xt[[i]], cex=.8); title(xlab=names(ds)[i], line=0.5, ylab=names(ds)[i+1]) }
quartz(w=8, h=4); par(mfrow=c(2, 4), mar=c(2, 2, 1, 1))
for (i in 1:length(xt)) {image(-log2(xt[[i]]+1), axes=FALSE, xaxs='i', yaxs='i'); text(rep(seq(0, 1, 1/8), 9), rep(seq(0, 1, 1/8), each=9), label=xt[[i]], cex=.8); title(xlab=names(ds)[i], line=0.5, ylab=names(ds)[i+1]) }
for (i in 1:length(xt)) {image(-sqrt(xt[[i]]+1), axes=FALSE, xaxs='i', yaxs='i'); text(rep(seq(0, 1, 1/8), 9), rep(seq(0, 1, 1/8), each=9), label=xt[[i]], cex=.8); title(xlab=names(ds)[i], line=0.5, ylab=names(ds)[i+1]) }
for (i in 1:length(xt)) {image(-sqrt(xt[[i]]), axes=FALSE, xaxs='i', yaxs='i'); text(rep(seq(0, 1, 1/8), 9), rep(seq(0, 1, 1/8), each=9), label=xt[[i]], cex=.8); title(xlab=names(ds)[i], line=0.5, ylab=names(ds)[i+1]) }
pdf_convert(f[1], dpi=120, filenames = f0[1])
